@page "/money/moneylist"
@using MoneyNoteLibrary5.ViewModels;
@using MoneyNoteLibrary5.Models;
@inject IJSRuntime JS;

<h3>MoneyList</h3>
<h4>@SharedClass.SharedUser?.Name</h4>

@if (ViewModel == null || ViewModel.IsRunProgressRing)
{
    <p>가져오는 중...</p>
}
else
{
    <div>
        <button @onclick="e => GetMoneyListWithDate(e, SelectedDate.Date.AddMonths(-1))">왼쪽</button>
        <span>@SelectedDate.ToString("yyyy-MM")</span>
        <button @onclick="e => GetMoneyListWithDate(e, SelectedDate.Date.AddMonths(1))">오른쪽</button>
    </div>
    <table>
        <thead>
            <tr>
                <th>제목</th>
                <th>내용</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewModel?.MoneyList)
            {
                <tr>
                    <td>
                        <span>@(item != null ? item.Title : "없다")</span>
                    </td>
                    <td>
                        <span>@(item != null ? item.Money : 0)</span>
                    </td>
                </tr>

            }
        </tbody>
    </table>

}

@code {
    public MoneyViewModel ViewModel { get; set; }

    public DateTimeOffset SelectedDate => ViewModel != null ? ViewModel.SelectedDate : DateTimeOffset.Now;

    protected override async Task OnInitializedAsync()
    {
        if (SharedClass.SharedUser == null)
            SharedClass.SharedUser = await GetUserInfo();

        if (SharedClass.SharedUser != null)
        {
            ViewModel = new MoneyViewModel(SharedClass.SharedUser);
            await ViewModel.GetMoneyList(DateTime.Now);
        }
        //return base.OnInitializedAsync();
    }

    public async Task<User> GetUserInfo()
    {
        var result = await JS.InvokeAsync<string>("GetUserInfo", "userKey");
        return JsonConvert.DeserializeObject<User>(result);
    }

    public async Task GetMoneyListWithDate(MouseEventArgs e, DateTime selectedDate)
    {
        await ViewModel.GetMoneyList(selectedDate);
    }

}
