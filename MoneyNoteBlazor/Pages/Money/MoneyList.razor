@page "/money/moneylist/{ParamDate?}"
@using MoneyNoteLibrary5.ViewModels;
@using MoneyNoteLibrary5.Models;
@inject IJSRuntime JS;


<div class="row">
    <div class="col align-middle">
        <h3 class="display-6">사용 내역</h3>
    </div>
</div>

<div class="row">
    <div class="col-9">
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary"
                    @onclick="e => GetMoneyListWithDate(e, SelectedDate.Date.AddMonths(-1))">
                이전
            </button>
            <button type="button" class="btn btn-outline-primary">
                @SelectedDate.ToString("yyyy-MM")
            </button>
            <button type="button" class="btn btn-outline-primary"
                    @onclick="e => GetMoneyListWithDate(e, SelectedDate.Date.AddMonths(1))">
                다음
            </button>
            <button type="button" class="btn btn-outline-primary"
                    @onclick="e => GetMoneyListWithDate(e, DateTime.Now)">
                오늘
            </button>
        </div>
    </div>
    <div class="col-3">
        <NavLink href="/money/moneywrite" class="btn btn-outline-primary float-end">작성하기</NavLink>
    </div>
</div>


@if (ViewModel == null || ViewModel.IsRunProgressRing)
{
    <p>가져오는 중...</p>
}
else
{
    <div class="row">
        <div class="col">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>날짜</th>
                        <th>제목</th>
                        <th>금액</th>

                    </tr>
                </thead>
                <tbody>
                    @if (ViewModel?.MoneyList.Count > 0)
                    {
                        @foreach (var item in ViewModel?.MoneyList)
                        {
                            <tr @onclick="e => MoveToModify(e, item.Id)">
                                <td>
                                    <span>@item.UpdatedTime.ToString("d")</span>
                                </td>
                                <td>
                                    <span>@(item != null ? item.Title : "없다")</span>
                                </td>
                                <td>
                                    <span>@(item != null ? String.Format("{0:#,0}", item.Money) : 0)</span>
                                </td>
                            </tr>

                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan=3>리스트가 비었습니다.</td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
}

@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public MoneyViewModel ViewModel { get; set; }

    public DateTimeOffset SelectedDate => ViewModel != null ? ViewModel.SelectedDate : DateTimeOffset.Now;

    [Parameter]
    public string ParamDate { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (SharedClass.SharedUser == null)
            SharedClass.SharedUser = await SharedClass.GetUserInfo(JS);

        if (SharedClass.SharedUser != null)
        {
            ViewModel = new MoneyViewModel(SharedClass.SharedUser);

            var parseResult = DateTime.TryParse(ParamDate, out DateTime paramDateTime);
            if (parseResult)
            {
                ViewModel.SelectedDate = paramDateTime;
                await ViewModel.GetMoneyList(paramDateTime);
            }
            else
                await ViewModel.GetMoneyList(DateTime.Now);
        }
        //return base.OnInitializedAsync();
    }

    public async Task GetMoneyListWithDate(MouseEventArgs e, DateTime selectedDate)
    {
        ParamDate = string.Empty;
        await ViewModel.GetMoneyList(selectedDate);
    }

    public void MoveToModify(EventArgs e, Guid moneyGuid)
    {
        if (NavigationManager != null)
            NavigationManager.NavigateTo($"/Money/MoneyWrite/{moneyGuid}");
    }

}

<style>
    .write_btn {
        text-align: right;
    }
</style>