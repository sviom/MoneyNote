@page "/money/moneywrite"
@using MoneyNoteLibrary5.ViewModels;
@using MoneyNoteLibrary5.Models;
@inject IJSRuntime JS;

<h3>MoneyWrite</h3>
@if (ViewModel == null || ViewModel.IsRunProgressRing)
{
    <h2>가져오는 중...</h2>
}
else
{
    <h4>@ViewModel.Title</h4>
    <div>
        <input type="radio" name="isIncomeRadio" value="dd" checked="@ViewModel.IsExpense" />
        <label>지출</label>
        <input type="radio" name="isIncomeRadio" value="ff" />
        <label>수입</label>
    </div>
    <div>
        <label>제목</label>
        <input type="text" @bind="ViewModel.Title" />
    </div>

    <div>
        <label>금액</label>
        <input type="number" @bind="ViewModel.MoneyText" />
    </div>

    <div>
        <label>설명</label>
        <input type="text" @bind="ViewModel.Description" />
    </div>

    <div>
        <select value="@ViewModel.MainCategoryId" @onchange="e => GetSubCategories(e)">
            @foreach (var item in ViewModel.MainCategories)
            {
                <option value="@item.Id">@item.Title</option>
            }
        </select>
    </div>

    <div>
        <select>
            @foreach (var item in ViewModel.SubCategories)
            {
                <option value="@item.Id">@item.Title</option>
            }
        </select>
    </div>
}


@code {
    public MoneyHandleViewModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (SharedClass.SharedUser == null)
            SharedClass.SharedUser = await SharedClass.GetUserInfo(JS);

        if (SharedClass.SharedUser != null)
        {
            ViewModel = new MoneyHandleViewModel(SharedClass.SharedUser);
            await ViewModel.CategoryInitialize();
        }
        //return base.OnInitializedAsync();
    }

    public async Task GetSubCategories(ChangeEventArgs e)
    {
        ViewModel.MainCategoryId = new Guid(e.Value.ToString());
        await ViewModel.GetSubCategories();
    }
}
