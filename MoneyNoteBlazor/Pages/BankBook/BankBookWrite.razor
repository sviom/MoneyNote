@page "/bankbook/bankbookwrite/{bankBookGuid:guid?}"
@using MoneyNoteLibrary5.ViewModels;
@using MoneyNoteLibrary5.Models;
@inject IJSRuntime JS;

<h3>BankBook 추가/수정</h3>
@if (ViewModel == null || ViewModel.IsRunProgressRing)
{
    <h2>가져오는 중...</h2>
}
else
{
    <div>
        <label>제목</label>
        <input type="text" @bind="SelectedBankBook.Name" />
    </div>

    <div>
        <label>금액</label>
        <input type="number" @bind="SelectedBankBook.Assets" />
    </div>

    @*<div>
            <label>설명</label>
            <input type="text" @bind="ViewModel.Description" />
        </div>*@


    <div>
        <button @onclick="SaveMoney">저장</button>
        <button @onclick="ModifyMoney">수정</button>
        <button @onclick="DeleteMoney">삭제</button>
    </div>
}


@code {

    public BankBookViewModel ViewModel { get; set; }

    public BankBook SelectedBankBook => ViewModel?.SelectedItem;

    [Parameter]
    public Guid bankBookGuid { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public string BankBookListLink => "/BankBook/BankBookList";

    protected override async Task OnInitializedAsync()
    {
        if (SharedClass.SharedUser == null)
            SharedClass.SharedUser = await SharedClass.GetUserInfo(JS);

        if (SharedClass.SharedUser != null)
        {
            ViewModel = new BankBookViewModel(SharedClass.SharedUser);
            await ViewModel.GetBankBooks();
            ViewModel.SelectedBankBookId = bankBookGuid;
        }
        //return base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        //return base.OnParametersSetAsync();
    }

    public async Task SaveMoney(EventArgs e)
    {
        await ViewModel.SaveBankBook();
    }

    public async Task ModifyMoney(EventArgs e)
    {
        var result = await ViewModel.ModifyBankBook();
        if (result)
            NavigationManager?.NavigateTo(BankBookListLink);
    }

    public async Task DeleteMoney(EventArgs e)
    {
        var result = await ViewModel.DeleteBankBook();
        if (result)
            NavigationManager?.NavigateTo(BankBookListLink);
    }
}
