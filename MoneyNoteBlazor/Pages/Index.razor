@layout EmptyLayout
@page "/"
@using MoneyNoteLibrary5.Common;
@using MoneyNoteLibrary5.Models;
@using static MoneyNoteLibrary5.Enums.MoneyApiInfo;

<div>
    <h1>MoneyNote</h1>

    Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />
    <input type="text" @bind="Email" />
    <input type="password" @bind="Password" />
    <button type="button" @onclick="Login">로그인</button>


</div>


@code{

    public ControllerEnum Controller => ControllerEnum.user;

    private string _ErrorMessage;
    public string ErrorMessage
    {
        get { return _ErrorMessage; }
        set
        {
            if (_ErrorMessage == value)
                return;

            _ErrorMessage = value;
        }
    }

    private string _Email;
    public string Email
    {
        get { return _Email; }
        set
        {
            if (_Email == value)
                return;

            _Email = value;
        }
    }

    private string _Password;
    public string Password
    {
        get { return _Password; }
        set
        {
            if (_Password == value)
                return;

            _Password = value;
        }
    }

    public bool IsValidEmail => MoneyNoteLibrary5.Common.ValidCheck.IsValidEmail(Email);

    public bool IsValidPassword => Password?.Length > 8;

    public bool IsEnableLogin => IsValidEmail && IsValidPassword;

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task Login()
    {
        if (!IsEnableLogin)
            return;

        var encryptedPassword = UtilityLauncher.EncryptSHA256(Password);
        var tempUser = new User()
        {
            Email = Email,
            Password = encryptedPassword
        };

        var result = await MoneyApi.LogIn.ApiLauncher<User, User>(tempUser, Controller);

        if (!result.Result)
            ErrorMessage = !string.IsNullOrEmpty(result.ResultMessage) ? result.ResultMessage : "에러가 발생했습니다.";

        if (NavigationManager != null)
            NavigationManager.NavigateTo("/Counter");

    }
}