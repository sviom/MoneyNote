@layout EmptyLayout
@page "/"
@using MoneyNoteLibrary5.ViewModels;
@inject IJSRuntime JS;
@*<div class="main">
        <div class="content px-4 text-center">

        </div>
    </div>*@

<div class="row justify-content-center">
    <form>
        <img class="mb-4" src="../assets/brand/bootstrap-logo.svg" alt="" width="72" height="57">
        <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

        <div class="form-floating">
            <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com" @bind="ViewModel.Email" />
            <label for="floatingInput">Email address</label>
        </div>
        <div class="form-floating">
            <input type="password" class="form-control" id="floatingPassword" placeholder="Password" @bind="ViewModel.Password" />
            <label for="floatingPassword">Password</label>
        </div>

        <div class="checkbox mb-3">
            <label>
                @*<input type="checkbox" value="remember-me"> Remember me*@
                <input type="checkbox" @bind-value="IsContainLogin" name="isContainLogin" /> 로그인 유지
            </label>
        </div>
        <button class="w-100 btn btn-lg btn-primary" type="button" @onclick="Login">Sign in</button>
        <p class="mt-5 mb-3 text-muted">&copy; 2017–2021</p>
    </form>
</div>



@code
{
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public LoginViewModel ViewModel { get; set; } = new LoginViewModel();

    public bool IsContainLogin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //await JS.InvokeAsync<bool>("SetUserInfo", null);
        var result = await SharedClass.GetUserInfo(JS);
        if (result != null)
            NavigationManager?.NavigateTo("/Money/MoneyList");


        //return base.OnInitializedAsync();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task Login()
    {
        if (!ViewModel.IsEnableLogin)
            return;

        var result = await ViewModel.LogIn();
        if (result.Item1)
        {
            SharedClass.SharedUser = result.Item2;
            var saveResult = await JS.InvokeAsync<bool>("SetUserInfo", JsonConvert.SerializeObject(result.Item2));

            if (IsContainLogin)
            {
                await SharedClass.SetItemInLocallStorage(JS, "keepLogin", "true");
            }


            if (NavigationManager != null)
                NavigationManager.NavigateTo("/Money/MoneyList");
        }
    }
}