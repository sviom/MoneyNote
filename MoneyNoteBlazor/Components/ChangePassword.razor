@using MoneyNoteLibrary5.ViewModels;
@using MoneyNoteLibrary5.Models;
@using MoneyNoteLibrary5.Enums;
@using MoneyNoteBlazor.Components;
@inject IJSRuntime JS;

<div class="row">
    <label class="col-4 col-lg-2 col-form-label">이전 비밀번호</label>
    <div class="col-8 col-lg-10">
        <input type="password" class="form-control" @bind="OldPassword" />
    </div>
</div>

<div class="row">
    <label class="col-4 col-lg-2 col-form-label">새로운 비밀번호</label>
    <div class="col-8 col-lg-10">
        <input type="password" class="form-control" @bind="NewPassword" />
    </div>
</div>

<div class="row">
    <label class="col-4 col-lg-2 col-form-label">새로운 비밀번호 확인</label>
    <div class="col-8 col-lg-10">
        <input type="password" class="form-control" @bind="NewConfirmPassword" />
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
{
    <div class="row">
        <label class="col-4 col-lg-2 col-form-label">에러!</label>
        <div class="col-8 col-lg-10">
            <span>@ViewModel.ErrorMessage</span>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-6 col-md-12 col-sm-12 mx-auto text-center">
        <div class="row">
            <div class="d-grid gap-0 col">
                <button class="btn btn-primary" type="button" @onclick="ChangePasswordAsync" disabled="@(ViewModel.IsRunProgressRing)">
                    @if (ViewModel.IsRunProgressRing)
                    {
                        <ProgressSpiner />
                    }
                    저장
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public SettingViewModel ViewModel { get; set; }

    public string OldPassword { get; set; }

    public string NewPassword { get; set; }

    public string NewConfirmPassword { get; set; }

    public async Task ChangePasswordAsync()
    {
        if (string.IsNullOrEmpty(OldPassword))
            return;

        if (SharedClass.SharedUser == null)
            SharedClass.SharedUser = await SharedClass.GetUserInfo(JS);

        await ViewModel?.ChangePassword(SharedClass.SharedUser, OldPassword, NewPassword, NewConfirmPassword);
    }
}

